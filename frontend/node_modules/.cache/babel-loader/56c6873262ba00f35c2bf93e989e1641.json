{"remainingRequest":"C:\\Users\\andre\\Desktop\\DS_Git\\ds_30441_pasc_andreea_assignment_1\\final-project-AndreeaPasc-master\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\andre\\Desktop\\DS_Git\\ds_30441_pasc_andreea_assignment_1\\final-project-AndreeaPasc-master\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\andre\\Desktop\\DS_Git\\ds_30441_pasc_andreea_assignment_1\\final-project-AndreeaPasc-master\\frontend\\src\\api\\services\\sensors.js","dependencies":[{"path":"C:\\Users\\andre\\Desktop\\DS_Git\\ds_30441_pasc_andreea_assignment_1\\final-project-AndreeaPasc-master\\frontend\\src\\api\\services\\sensors.js","mtime":1637174623000},{"path":"C:\\Users\\andre\\Desktop\\DS_Git\\ds_30441_pasc_andreea_assignment_1\\final-project-AndreeaPasc-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\andre\\Desktop\\DS_Git\\ds_30441_pasc_andreea_assignment_1\\final-project-AndreeaPasc-master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\andre\\Desktop\\DS_Git\\ds_30441_pasc_andreea_assignment_1\\final-project-AndreeaPasc-master\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF1dGhIZWFkZXIsIHsgQkFTRV9VUkwsIEhUVFAgfSBmcm9tICIuLi9odHRwIjsKZXhwb3J0IGRlZmF1bHQgewogIGFsbFNlbnNvcnM6IGZ1bmN0aW9uIGFsbFNlbnNvcnMoKSB7CiAgICByZXR1cm4gSFRUUC5nZXQoQkFTRV9VUkwgKyAiL3NlbnNvcnMiLCB7CiAgICAgIGhlYWRlcnM6IGF1dGhIZWFkZXIoKQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICB9KTsKICB9LAogIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKHNlbnNvcikgewogICAgcmV0dXJuIEhUVFAucG9zdChCQVNFX1VSTCArICIvc2Vuc29ycyIsIHNlbnNvciwgewogICAgICBoZWFkZXJzOiBhdXRoSGVhZGVyKCkKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJldHVybiByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgfSwKICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShzZW5zb3IpIHsKICAgIHJldHVybiBIVFRQLnB1dChCQVNFX1VSTCArICIvc2Vuc29ycy8iLmNvbmNhdChzZW5zb3IuaWQpLCBzZW5zb3IsIHsKICAgICAgaGVhZGVyczogYXV0aEhlYWRlcigpCiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogIH0sCiAgZGVsZXRlOiBmdW5jdGlvbiBfZGVsZXRlKHNlbnNvcikgewogICAgcmV0dXJuIEhUVFAuZGVsZXRlKEJBU0VfVVJMICsgIi9zZW5zb3JzLyIuY29uY2F0KHNlbnNvci5pZCksIHsKICAgICAgaGVhZGVyczogYXV0aEhlYWRlcigpCiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["C:/Users/andre/Desktop/DS_Git/ds_30441_pasc_andreea_assignment_1/final-project-AndreeaPasc-master/frontend/src/api/services/sensors.js"],"names":["authHeader","BASE_URL","HTTP","allSensors","get","headers","then","response","data","create","sensor","post","update","put","id","delete"],"mappings":"AAAA,OAAOA,UAAP,IAAqBC,QAArB,EAA+BC,IAA/B,QAA2C,SAA3C;AAEA,eAAe;AACXC,EAAAA,UADW,wBACE;AACT,WAAOD,IAAI,CAACE,GAAL,CAASH,QAAQ,GAAG,UAApB,EAAgC;AAAEI,MAAAA,OAAO,EAAEL,UAAU;AAArB,KAAhC,EAA2DM,IAA3D,CACH,UAACC,QAAD,EAAc;AACV,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAKH,GAPU;AASXC,EAAAA,MATW,kBASJC,MATI,EASI;AACX,WAAOR,IAAI,CAACS,IAAL,CAAUV,QAAQ,GAAG,UAArB,EAAiCS,MAAjC,EAAyC;AAAEL,MAAAA,OAAO,EAAEL,UAAU;AAArB,KAAzC,EAAoEM,IAApE,CACH,UAACC,QAAD,EAAc;AACV,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAKH,GAfU;AAgBXI,EAAAA,MAhBW,kBAgBJF,MAhBI,EAgBI;AACX,WAAOR,IAAI,CAACW,GAAL,CAASZ,QAAQ,sBAAeS,MAAM,CAACI,EAAtB,CAAjB,EAA6CJ,MAA7C,EAAqD;AAAEL,MAAAA,OAAO,EAAEL,UAAU;AAArB,KAArD,EAAgFM,IAAhF,CACH,UAACC,QAAD,EAAc;AACV,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAKH,GAtBU;AAwBXO,EAAAA,MAxBW,mBAwBJL,MAxBI,EAwBG;AACV,WAAOR,IAAI,CAACa,MAAL,CAAYd,QAAQ,sBAAeS,MAAM,CAACI,EAAtB,CAApB,EAAgD;AAAET,MAAAA,OAAO,EAAEL,UAAU;AAArB,KAAhD,EAA2EM,IAA3E,CACH,UAACC,QAAD,EAAc;AACV,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHE,CAAP;AAKH;AA9BU,CAAf","sourcesContent":["import authHeader, { BASE_URL, HTTP } from \"../http\";\n\nexport default {\n    allSensors() {\n        return HTTP.get(BASE_URL + \"/sensors\", { headers: authHeader() }).then(\n            (response) => {\n                return response.data;\n            }\n        );\n    },\n\n    create(sensor) {\n        return HTTP.post(BASE_URL + \"/sensors\", sensor, { headers: authHeader() }).then(\n            (response) => {\n                return response.data;\n            }\n        );\n    },\n    update(sensor) {\n        return HTTP.put(BASE_URL + `/sensors/${sensor.id}`, sensor, { headers: authHeader() }).then(\n            (response) => {\n                return response.data;\n            }\n        );\n    },\n\n    delete(sensor){\n        return HTTP.delete(BASE_URL + `/sensors/${sensor.id}`, { headers: authHeader() }).then(\n            (response) => {\n                return response.data;\n            }\n        );\n    },\n};"]}]}